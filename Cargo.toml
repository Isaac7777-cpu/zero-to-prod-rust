[package]
name = "zero2prod"
version = "0.1.0"
edition = "2021"
authors = ["Isaac Leong <isaacleong23367@gmail.com>"]

# Notice the double square brackets: it's an array in TOML's syntax,
# We can only have one library in a project, but we can have multiple binaries!
# If you want to manage multiple libraries in the same repository
# have a look at the workspace fature - we'll cover it later on.
[[bin]]
path = "src/main.rs"
name = "zero2prod"

[dependencies]
actix-web = "4.0.0"
serde = { version = "1", features = ["derive"] }
tokio = { version = "1", features = ["macros", "rt-multi-thread"] }
config = "0.11"
uuid = { version = "0.8.1", features = ["v4"] }
chrono = "0.4.15"
tracing = { version = "0.1", features = ["log"] }
tracing-subscriber = { version = "0.3", features = ["registry", "env-filter"] }
tracing-bunyan-formatter = "0.3"
tracing-log = "0.1"
log = "0.4"
thiserror = "1.0.24"
serde-aux = "4"
unicode-segmentation = "1.7.1"
rand = { version = "0.8", features = ["std_rng"] }
anyhow = "1.0.40"
base64 = "0.22.0"
argon2 = { version = "0.5", features = ["std"] }
validator = "0.18"
tracing-actix-web = "0.7"
secrecy = { version = "0.8", features = ["serde"] }
actix-web-flash-messages = { version = "0.5", features = ["cookies"] }
actix-session = { version = "0.10", features = ["redis-session-rustls"] }
serde_json = "1"

[dev-dependencies]
reqwest = "0.11"
once_cell = "1"

[build-dependencies]
syn = "1"

# Using table-like toml syntax to avoid a super-long line
[dependencies.sqlx]
version = "0.5.7"
default-features = false
features = [
  "runtime-actix-rustls", # Tells sqlx touse the actix runtime for its futures and rust ls as TLS backend
  "macros",               # Gives us access to sqlx::query! and sqlx::query_as!, for writing queries
  "postgres",             # Unlocks Postgres specific functionality (non-standard SQL types)
  "uuid",                 # Adds support for mapping SQL UUIDs to the `Uuid` type from `uuid` create
  "chrono",               # Add supports for mapping SQL timestamptz to the DateTime<T> type from chrono crate
  "migrate",              # Gives the same functions used under the hood by `sqlx-cli` to manage migrations.
  "offline",              # Used for offline compilation with docker image. 
]

[lib]
# We could use any path here, but we are following the community convention
# We could specify a library name using the `name` filed. If unspecified,
# cargo will default to `package.name`, which is what we want
path = "src/lib.rs"
